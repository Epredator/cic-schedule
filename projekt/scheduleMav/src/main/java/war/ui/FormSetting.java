package war.ui;



import war.data.DemoDataGenerator;
import com.vaadin.ui.GridLayout;
import com.vaadin.data.util.IndexedContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.themes.Runo;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.VerticalLayout;

public class FormSetting extends CustomComponent {
	
	
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout gridLayout_1;

	@AutoGenerated
	private Button button_5;

	@AutoGenerated
	private Button button_4;

	@AutoGenerated
	private Button button_3;
	
	
	private VerticalLayout left = new VerticalLayout();
	private HorizontalLayout buttonLeft = new HorizontalLayout();
	private Button LoadAgencyButton;//
	
	public FormSetting()  {
		
		buildMainLayout();
		setCompositionRoot(mainLayout);
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1);
		
		return mainLayout;
	}
	

	
	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("-1px");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(3);
		gridLayout_1.setRows(4);
		
		// button_3
		
		
		addComponent(new Button("Load Test",
                new Button.ClickListener() {
    				private static final long serialVersionUID = 1L;
    				public void buttonClick(ClickEvent event) {
    					 DemoDataGenerator.createAgencies();
                    }
    				
                }));
		
		button_3.setImmediate(true);
		button_3.setWidth("-1px");
		button_3.setHeight("-1px");
		gridLayout_1.addComponent(button_3, 0, 0);
		
		button_3 = new Button("Load Test data sample", new Button.ClickListener() {
	        private static final long serialVersionUID = 1L;

	        public void buttonClick(ClickEvent event) {
	        	 DemoDataGenerator.create();
	        }
	    });
		
	/*
		
		// button_4
		button_4 = new Button();
		button_4.setCaption("Button");
		button_4.setImmediate(true);
		button_4.setWidth("-1px");
		button_4.setHeight("-1px");
		button_4.setTabIndex(1);
		gridLayout_1.addComponent(button_4, 1, 0);
		
		// button_5
		button_5 = new Button();
		button_5.setCaption("Button");
		button_5.setImmediate(true);
		button_5.setWidth("-1px");
		button_5.setHeight("26px");
		gridLayout_1.addComponent(button_5, 2, 0);
		*/
		
		return gridLayout_1;
	}
	
	

    private void initContactAddRemoveButtons() {
    	
    	 // New item button
    	mainLayout.addComponent(new Button("Load Test",
                new Button.ClickListener() {
    				private static final long serialVersionUID = 1L;
    				public void buttonClick(ClickEvent event) {
    					 DemoDataGenerator.createAgencies();
                    }
                }));
        
        
        // New item button
    	mainLayout.addComponent(new Button("Load sample data to  Agency",
                new Button.ClickListener() {
    				private static final long serialVersionUID = 1L;
    				public void buttonClick(ClickEvent event) {
    					 DemoDataGenerator.create();
                    }
                }));


    } 
    

				
				

}


//===============================================================================
/*
package org.cicts.scheduler;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.VerticalLayout;


public class Scheduler extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private GridLayout gridLayout_1;

	@AutoGenerated
	private Button button_5;

	@AutoGenerated
	private Button button_4;

	@AutoGenerated
	private Button button_3;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
/*
	private  HorizontalSplitPanel horizontalLayoutGroupTop;
	//private Button buttonNextGroup;
	private Button buttonPrevGroup;



	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
/*	
public Scheduler() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// gridLayout_1
		gridLayout_1 = buildGridLayout_1();
		mainLayout.addComponent(gridLayout_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildGridLayout_1() {
		// common part: create layout
		gridLayout_1 = new GridLayout();
		gridLayout_1.setImmediate(false);
		gridLayout_1.setWidth("-1px");
		gridLayout_1.setHeight("-1px");
		gridLayout_1.setMargin(true);
		gridLayout_1.setSpacing(true);
		gridLayout_1.setColumns(3);
		gridLayout_1.setRows(4);
		
		// button_3
		button_3 = new Button();
		button_3.setCaption("Button");
		button_3.setImmediate(true);
		button_3.setWidth("-1px");
		button_3.setHeight("-1px");
		gridLayout_1.addComponent(button_3, 0, 0);
		
		// button_4
		button_4 = new Button();
		button_4.setCaption("Button");
		button_4.setImmediate(true);
		button_4.setWidth("-1px");
		button_4.setHeight("-1px");
		button_4.setTabIndex(1);
		gridLayout_1.addComponent(button_4, 1, 0);
		
		// button_5
		button_5 = new Button();
		button_5.setCaption("Button");
		button_5.setImmediate(true);
		button_5.setWidth("-1px");
		button_5.setHeight("26px");
		gridLayout_1.addComponent(button_5, 2, 0);
		
		return gridLayout_1;
	}



	

}
*/
